{
  "keyboard_shortcut": "Ctrl+D", 
  "name": "Duplicate line or selection", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "trigger_enabled": false, 
  "value": [
    "function lineOrSelectionDuplicate(scimoz) {", 
    "    var sm = scimoz;", 
    "    if (sm.selectionStart == sm.selectionEnd) {", 
    "        sm.lineDuplicate();", 
    "        return;", 
    "    }", 
    "    // Otherwise [copy|move to selectionEnd|paste|select pasted text]", 
    "    var startPos = Math.min(sm.anchor, sm.currentPos);", 
    "    var endPos = Math.max(sm.anchor, sm.currentPos);", 
    "    var textToCopy;", 
    "    if (sm.selectionMode == sm.SC_SEL_STREAM) {", 
    "        textToCopy = sm.getTextRange(startPos, endPos);", 
    "        //alert(textToCopy);", 
    "        sm.targetStart = endPos;", 
    "        sm.targetEnd = endPos;", 
    "        var textLen = ko.stringutils.bytelength(textToCopy);", 
    "        sm.beginUndoAction();", 
    "        try {", 
    "            // replaceTarget takes length in terms of characters", 
    "            sm.replaceTarget(textToCopy.length, textToCopy);", 
    "            sm.anchor = endPos;", 
    "            // Positions are updated in terms of bytes", 
    "            sm.currentPos = endPos + textLen;", 
    "        } catch(e) {", 
    "        }", 
    "        finally {", 
    "            sm.endUndoAction();", 
    "        }", 
    "    } else if (sm.selectionMode == sm.SC_SEL_RECTANGLE) {", 
    "         //Slide rectangular selections horizontally", 
    "        var startLine = sm.lineFromPosition(startPos);", 
    "        var endLine = sm.lineFromPosition(endPos);", 
    "        var finalStartPos = sm.getLineSelEndPosition(startLine);", 
    "        var finalEndCol = (sm.getLineSelEndPosition(endLine)", 
    "                       - sm.positionFromLine(endLine));", 
    "        var finalLineWidth = (sm.getLineSelEndPosition(endLine)", 
    "                          - sm.getLineSelStartPosition(endLine));", 
    "        sm.beginUndoAction();", 
    "        try{", 
    "            var selStart, selEnd;", 
    "            for(var i = startLine; i <= endLine + 1; ++i) {", 
    "                selStart = sm.getLineSelStartPosition(i);", 
    "                selEnd = sm.getLineSelEndPosition(i);", 
    "                textToCopy = sm.getTextRange(selStart, selEnd);", 
    "                sm.targetStart = selEnd;", 
    "                sm.targetEnd = selEnd;", 
    "                sm.replaceTarget(ko.stringutils.bytelength(textToCopy), textToCopy);", 
    "            }", 
    "            sm.anchor = finalStartPos;", 
    "            sm.currentPos = (sm.positionFromLine(endLine)", 
    "                             + finalEndCol", 
    "                             + finalLineWidth);", 
    "        } catch(e) {", 
    "            alert(e);", 
    "        }", 
    "        finally {", 
    "            sm.endUndoAction();", 
    "        }", 
    "    }", 
    "}", 
    "", 
    "lineOrSelectionDuplicate(ko.views.manager.currentView.scimoz);"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "icon": "koicon://ko-svg/chrome/icomoon/skin/copy4.svg"
}