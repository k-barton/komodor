{
  "keyboard_shortcut": "", 
  "name": "Rmarkdown preview", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/*globals ko*/", 
    "", 
    "let beVerbose = false;", 
    "let showInTab = true;", 
    "let view = require(\"ko/views\").current();", 
    "if (!view || !view.koDoc) return;", 
    "", 
    "if (['Rmarkdown', 'Markdown'].indexOf(view.koDoc.language) == -1)", 
    "    return;", 
    "", 
    "let file = require(\"kor/ui\").pathWithCurrentViewContent();", 
    "if (file) {", 
    "    let r = require(\"kor/r\");", 
    "    ", 
    "    require(\"kor/connector\").evalAsync(\"cat(kor::rmdToHtml(\" + r.arg(file) + \", verbose=\" +", 
    "                       r.arg(beVerbose) + \"), \\\"\\\\n\\\")\",", 
    "        (output) => {", 
    "            var path = output.substr(output.search(/[^\\r\\n]+$/)).trim();", 
    "            if (!require(\"kor/fileutils\").exists(path)) {", 
    "                ko.dialogs.alert(output, null, \"Rmarkdown preview\");", 
    "                return;", 
    "            }", 
    "            let uri = require(\"kor/fileutils\").toFileURI(path);", 
    "            if(showInTab) {", 
    "                let view = ko.views.manager.getViewForURI(uri, \"browser\");", 
    "                if(!view)", 
    "                    ko.views.manager.openViewAsync(\"browser\", uri);", 
    "                else {", 
    "                    view.browser.webNavigation.reload(view.browser.webNavigation.LOAD_FLAGS_NONE);", 
    "                    view.makeCurrent();", 
    "                }", 
    "            } else", 
    "                require(\"kor/command\").openHelp(uri);", 
    "        }, false);", 
    "}"
  ], 
  "trigger": "trigger_postopen", 
  "rank": 100, 
  "version": "1.0.12", 
  "async": false, 
  "type": "macro", 
  "icon": "koicon://ko-svg/chrome/icomoon/skin/screen4.svg"
}