<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
This file is part of "KomodoR", a Komodo add-on.

"KomodoR" is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

"KomodoR" is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Contributors:
   Kamil Barton
   This code is based on the original Sciviews-K code by Philippe Grosjean,
   Kamil Barton and Romain Francois
 
***** END LICENSE BLOCK ***** -->

<!DOCTYPE overlay PUBLIC "-//MOZILLA//DTD XUL V1.0//EN"
"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" [
  <!ENTITY % rbrowserDTD SYSTEM "chrome://komodor/locale/rbrowser.dtd">
%rbrowserDTD;
]>

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/global/global.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/toolbar.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/platform.css" type="text/css"?>
<!--<?xml-stylesheet href="chrome://places/skin/places.css" type="text/css"?>-->
<?xml-stylesheet href="chrome://komodor/skin/komodor.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodor/skin/rbrowser.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodor/skin/rbrowser8.css" type="text/css"?>

<page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<script type="application/x-javascript" src="chrome://global/content/nsDragAndDrop.js"/>
<script type="application/x-javascript">
<![CDATA[
// find sv object in the main Komodo window:
var sv;
var p = self;
do {
	p = p.parent;
	if (p.sv) {
		sv = p.sv;
		break;
	}
} while(p.parent != p);
if (typeof(sv) == 'undefined')
	while ((p = p.opener)) {
		if (p.sv) {
			sv = p.sv;
			break;
		}
	}
]]>
</script>
<script type="application/x-javascript" src="chrome://komodor/content/js/tools/strings.js"/>
<script type="application/x-javascript" src="chrome://komodor/content/js/rbrowser.js"/>
<script type="application/x-javascript">
<![CDATA[
addEventListener("DOMContentLoaded", function(event) {
	sv.rbrowser.onLoad();
}, false);
]]>
</script>


<popupset id="extensionPopupSet">
	<menupopup id="rObjectsContext" onpopupshowing="sv.rbrowser.contextOnShow(event)">
		<menuitem id="menu_rbrowser_insertname"
			label="&sv.insName;"
			oncommand="sv.rbrowser.insertName(false)"
			accesskey="I"
			acceltext="Ins" />
		<menuitem id="menu_rbrowser_insertquoted"
			label="&sv.insertQuoted;"
			oncommand="sv.rbrowser.insertName(false, true)"
			accesskey="&sv.insertQuoted.acc;"
			acceltext="Shift+Ins" />
		<menuitem id="menu_rbrowser_insertfullname"
			class="primary_menu_item"
			oncommand="sv.rbrowser.insertName(true)"
			accesskey="F"
			label="&sv.insFullName;"
			acceltext="Ctrl+Ins" />

		<menuseparator keep="false" intoplevel="true"/>
		<menuitem id="cmd_rbrowser_removeobj"
			label="&sv.rmObj;"
			oncommand="sv.rbrowser.removeSelected(event.shiftKey)"
			accesskey="R"
			acceltext="Del"
			testDisableIf="t:noDelete"
			key="key_cmd_delete" />
		<menuitem id="menu_rbrowser_deletenow"
			label="&sv.deleteNow;"
			oncommand="sv.rbrowser.removeSelected(true)"
			class="menuitem-iconic list-item-remove-icon"
			acceltext="Shift+Del"
			testDisableIf="t:noDelete"
			accesskey="&sv.deleteNow.acc;" />

		<menuseparator keep="false" intoplevel="true"/>
		<menuitem id="cmd_rbrowser_summary"
			label="&sv.summary;"
			oncommand="sv.rbrowser.doCommand('summary')"
			testDisableIf="t:isFunction t:isEnvironment"
			accesskey="S" />
		<menuitem id="cmd_rbrowser_print"
			label="&sv.print;"
			oncommand="sv.rbrowser.doCommand('print')"
			testDisableIf="t:isPackage"
			accesskey="P" />
		<menuitem id="cmd_rbrowser_plot"
			label="&sv.plot;"
			oncommand="sv.rbrowser.doCommand('plot')"
			testDisableIf="t:isFunction t:isEnvironment"
			accesskey="O"/>
		<menuitem id="cmd_rbrowser_str"
			label="&sv.str;"
			oncommand="sv.rbrowser.doCommand('str')"
			testDisableIf="t:isPackage"
			accesskey="T"/>

		<menuseparator keep="false" intoplevel="true"/>
		<menuitem id="menu_rbrowser_selectall"
			label="&sv.selectAll;"
			oncommand="sv.rbrowser.selection.selectAll()"
			accesskey="&sv.selectAll.acc;"
			acceltext="Ctrl+A" />
		<menuitem id="menu_rbrowser_selectsiblings"
			label="&sv.selectSiblings;"
			oncommand="sv.rbrowser.selectAllSiblings(sv.rbrowser.selection.currentIndex)"
			accesskey="&sv.selectSiblings.acc;"
			acceltext="Ctrl+Shift+A" />

		<menuseparator keep="false" intoplevel="true"/>
		<menuitem id="menu_rbrowser_write_table"
			class="menuitem-iconic write-table-icon"
			label="&sv.write_table;"
			oncommand="sv.rbrowser.doCommand('write.table')"
			testDisableIf="t:cannotSaveToFile"
			accesskey="T"/>

		<menuitem id="menu_rbrowser_save"
			class="menuitem-iconic save-buffer-icon"
			label="&sv.save;"
			oncommand="sv.rbrowser.doCommand('save')"
			testDisableIf="t:cannotSave"
			accesskey="S" />

		<menuseparator keep="false" intoplevel="true"/>
		<menuitem id="menu_rbrowser_help"
			label="&sv.help;"
			oncommand="sv.rbrowser.doCommand('help')"
			testDisableIf="t:multipleSelection t:noHelp"
			accesskey="H" />
	</menupopup>
</popupset>

<vbox flex="1" id="rbrowserViewbox_rbrowserWrapper">
	<vbox flex="99" id="rbrowserViewbox_rbrowser">
		<hbox align="center" id="rbrowserToolbar" class="toolbar-box"
			type="icons">
			<toolbarbutton id="rbrowser_refresh_button"
				tooltiptext="&sv.refresh.tip;"
				buttonstyle="pictures"
				class="refresh-icon"
				oncommand="sv.rbrowser.refresh()"/>

				<toolbarbutton id="rbrowser_foldAll_button"
					buttonstyle="pictures"
					class="robjects-fold-all-icon"
					oncommand="sv.rbrowser.foldAll(true)"
					tooltiptext="&sv.foldAll;"/>
				<toolbarbutton id="rbrowser_ExpandAll_button"
					buttonstyle="pictures"
					class="robjects-expand-all-icon"
					oncommand="sv.rbrowser.foldAll(false)"
					tooltiptext="&sv.unfoldAll;"/>

				<toolbarseparator style="min-width:10px;" flex="1"/>

		<!--		<toolbarbutton id="rbrowser_filter"
					tooltiptext="&sv.filter.tip;"
					buttonstyle="pictures" type="menu" orient="horizontal"
					class="rightarrow-button-a r-objects-filter">
					<menupopup id="rbrowser_filterPopup">
						<menuitem id="rbrowser_context_filterByName"
							label="&sv.filterByName;"
							checked="true" accesskey="n" type="checkbox"
							oncommand="sv.rbrowser.setFilterBy(this, 'name')"/>
						<menuitem id="rbrowser_context_filterByClass"
							label="&sv.filterByClass;"
							accesskey="c" type="checkbox"
							oncommand="sv.rbrowser.setFilterBy(this, 'class')"/>
						<menuitem id="rbrowser_context_filterByGroup"
							label="&sv.filterByGroup;"
							accesskey="g" type="checkbox"
							oncommand="sv.rbrowser.setFilterBy(this, 'group')"/>
						<menuseparator/>
						<menuitem id="rbrowser_context_clrFilter"
							label="&sv.clrFilter;" accesskey="l"
							oncommand="document.getElementById('rbrowser_filterbox').value = ''; sv.rbrowser.applyFilter();"/>
					</menupopup>
				</toolbarbutton>-->
				<textbox id="rbrowser_filterbox" flex="1"
					type="search" timeout="500"
					tooltiptext="&sv.filter.tip;"
					style="min-width: 40px; max-width: 200px; margin-right: 0px;"
					class="search-box"
					oncommand="sv.rbrowser.applyFilter()"
					emptytext="&sv.filterEmptyText;"
					/>

				<toolbarbutton type="radio" group="filter"
							   id="rbrowser_filterByName_button"
							   checked="true"
							   class="toolbarbutton-iconic"
							   oncommand="sv.rbrowser.setFilterBy(this, 'name')"
							   label="&sv.filterByName;"
							   tooltiptext="&sv.filterByName;"
							   />
				<toolbarbutton id="rbrowser_filterByClass_button"
							   type="radio" group="filter"
							   oncommand="sv.rbrowser.setFilterBy(this, 'class')"
							   label="&sv.filterByClass;"
							   tooltiptext="&sv.filterByClass;"
							   />
							   
				<toolbarbutton id="rbrowser_showAll_button"
							   type="checkbox" 
							   oncommand="sv.rbrowser.listAllNames = this.checked;"
							   label="&sv.listAllNames;"
							   tooltiptext="&sv.listAllNames;"
							   />
							   
				<toolbarbutton id="rbrowser_tools" buttonstyle="pictures" type="menu" 
					tooltiptext="R browser options" orient="horizontal" 
					class="project-tools-icon">
						<menupopup id="rbrowser_toolsPopup">
							<menuitem id="rbrowser_tools_showAllObjectsButton" 
								observes="cmd_rbrowser_showAllObjects" 
								label="Show all objects" desc="R browser: Show all objects" 
								oncommand="ko.commands.doCommand('cmd_rbrowser_showAllObjects', event)" 
								key="key_cmd_rbrowser_showAllObjects"
								disabled="true" />
							<menuitem id="rbrowser_tools_showAttribButton" observes="cmd_rbrowser_showAttrib" 
								label="Show attributes" desc="R browser: Show object attributes" 
								oncommand="ko.commands.doCommand('cmd_rbrowser_showAttrib', event)" 
								key="key_cmd_rbrowser_showAttrib"
								disabled="true" />
							</menupopup>
				</toolbarbutton>		   
				
		   </hbox>

			<vbox flex="5">
				<tree flex="1" id="rbrowser_objects_tree"
					persist="sortDirection sortResource"
					sortDirection="ascending" sortResource="r-name"
					enableColumnDrag="true"
					onselect="sv.rbrowser.onEvent(event)"
					onkeypress="sv.rbrowser.onEvent(event)">
					<treecols>
						<treecol id="r-name" label="&sv.Name;"
							primary="true" sortActive="true"
							persist="width ordinal hidden"
							onclick="sv.rbrowser.sort(this)" ordinal="1" flex="4"/>
						<splitter class="tree-splitter" ordinal="2"/>
						<treecol id="r-dims" label="&sv.Dims;"
							persist="width ordinal hidden"
							onclick="sv.rbrowser.sort(this)" flex="1" ordinal="3"/>
						<splitter class="tree-splitter" ordinal="4"/>
						<treecol id="r-group" label="&sv.Group;"
							flex="2" hidden="true" persist="width ordinal hidden"
							onclick="sv.rbrowser.sort(this)" ordinal="5"/>
						<splitter class="tree-splitter" ordinal="6"/>
						<treecol id="r-class" label="&sv.Class;"
							flex="2" hidden="true" persist="width ordinal hidden"
							onclick="sv.rbrowser.sort(this)" ordinal="7"/>
						<splitter class="tree-splitter" ordinal="8"/>
						<treecol id="r-fullName" label="&sv.FullName;"
							persist="width ordinal hidden" flex="1" hidden="true" ordinal="9"/>
					</treecols>
					<treechildren id="rbrowser_objects_tree_main"
						ondraggesture="nsDragAndDrop.startDrag(event, sv.rbrowser.listObserver)"
						ondragdrop="nsDragAndDrop.drop(event, sv.rbrowser.listObserver)"
						ondragover="nsDragAndDrop.dragOver(event, sv.rbrowser.listObserver)"
						onclick="sv.rbrowser.onEvent(event)"
						ondblclick="sv.rbrowser.onEvent(event)"
						context="rObjectsContext">
					</treechildren>
				</tree>
			</vbox>
			<splitter id="rbrowserSubpanelSplitter"
				orient="vertical"
				resizeafter="farthest"
				ondblclick="sv.rbrowser.toggleViewSearchPath()"
				collapse="none">
				<vbox flex="1" height="32">
					<hbox id="rbrowserSubpanelSplitterHboxBorder"/>
				    <hbox id="rbrowserSubpanelSplitterHbox"
						  flex="1" align="center">
						  <label id="rbrowserSubpanelSplitterProjectLabel"
						  class="panel-label">R search path</label>
						  <spacer flex="1"/>
						  <toolbarbutton id="rbrowserSubpanelToggle"
							  buttonstyle="pictures"
							  oncommand="sv.rbrowser.toggleViewSearchPath()"
							  persist="state"
							  state="collapsed"
							  tooltiptext="Open the R Search Path Subpanel"
							  />
						  <spacer flex="1"/>
					</hbox>
				</vbox>
			</splitter>

			<vbox id="rbrowserSubpanelBox"
				persist="height collapsed" collapsed="true" flex="1">
				<listbox flex="1" id="rbrowser_searchpath_listbox"
					ondragdrop="nsDragAndDrop.drop(event, sv.rbrowser.packageListObserver)"
					ondragover="nsDragAndDrop.dragOver(event, sv.rbrowser.packageListObserver)"
					ondraggesture="nsDragAndDrop.startDrag(event, sv.rbrowser.packageListObserver)"
					onkeypress="sv.rbrowser.packageListKeyEvent(event)"
					oncommand="sv.rbrowser.packageSelectedEvent(event)"/>
			</vbox>
		</vbox>
	</vbox>
</page>
